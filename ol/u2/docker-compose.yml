version: '3'

services:
  jk: # juicefs kvrocks
    restart: always
    container_name: art-jk
    build:
      context: ../../docker/kvrocks
      dockerfile: Dockerfile
    # mem_limit: 1G
    environment:
      KVROCKS_ARGS: |
        --port ${JK_PORT}
        --requirepass ${JK_PASSWORD}
        --workers ${JK_WORKERS}
        --log /log
        --dir /data
        --timeout 360
        --rocksdb.compression zstd
        --rocksdb.enable_blob_files yes
        --rocksdb.read_options.async_io yes
    volumes:
      - ./data/jk:/data
      - ./log/jk:/log
    ports:
      - ${JK_PORT}:${JK_PORT}

  redis:
    container_name: art-redis
    image:  redis/redis-stack-server:7.2.0-v0
    restart: always
    environment:
      REDIS_ARGS: >
        --aclfile /data/acl
        --port ${REDIS_PORT}
        --appendonly yes
        --bind 0.0.0.0
        --save 64 1 --save 32 8 --save 2 32768
        --repl-backlog-size 256m
      REDIS_DATA_DIR: /data
    volumes:
      - ./data/redis:/data
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}

  pg:
    container_name: art-pg
    image: xxai/postgres
    volumes:
      - ./data/pg:/var/lib/postgresql/data
      - ./log/pg:/log
    restart: always
    environment:
      POSTGRES_DB: ${PG_DB}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_USER: ${PG_USER}
      PGPORT: ${PG_PORT}
    ports:
      - ${PG_PORT}:${PG_PORT}
    command: >
      postgres
      -c archive_mode=on
      -c autovacuum=on
      -c checkpoint_completion_target=0.9
      -c default_toast_compression=lz4
      -c effective_io_concurrency=256
      -c log_timezone=PRC
      -c logging_collector=on
      -c maintenance_work_mem=512MB
      -c max_connections=512
      -c max_parallel_workers=8
      -c max_wal_senders=3
      -c max_wal_size=8GB
      -c max_worker_processes=8
      -c min_wal_size=80MB
      -c random_page_cost=1.1
      -c shared_buffers=2GB -c effective_cache_size=8GB
      -c synchronous_commit=off
      -c wal_compression=zstd
      -c wal_level=logical

  qdrant:
    container_name: art-qdrant
    image:  qdrant/qdrant
    restart: always
    environment:
      QDRANT__SERVICE__HTTP_PORT: ${QDRANT__SERVICE__HTTP_PORT}
      QDRANT__SERVICE__GRPC_PORT: ${QDRANT__SERVICE__GRPC_PORT}
      QDRANT__SERVICE__API_KEY: ${QDRANT__SERVICE__API_KEY}
    volumes:
      - ./data/qdrant/storage:/qdrant/storage
      - ./data/qdrant/snapshots:/qdrant/snapshots
    ports:
      - ${QDRANT__SERVICE__GRPC_PORT}:${QDRANT__SERVICE__GRPC_PORT}
      - ${QDRANT__SERVICE__HTTP_PORT}:${QDRANT__SERVICE__HTTP_PORT}

