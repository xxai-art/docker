upstream xxai-ws {
  hash $hash_key consistent;
  server host.docker.internal:8133 max_fails=3 fail_timeout=6s weight=10;
}

server {
  server_name  localhost;
  listen  8023;
  location ~ ^/([\w-]+)$ {
    set $hash_key $1;
    proxy_pass http://xxai-ws;
    proxy_http_version 1.1;
    proxy_set_header Cookie $http_cookie;
    proxy_set_header Host $host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_connect_timeout 5s;
    proxy_send_timeout 10m;
    proxy_read_timeout 10m;
  }
}


server {
  server_name  localhost;
  listen  80;

  location ~ ^/(u\.conf|u|u\.enter|u\.exit|u\.exitAll|u\.last|u\.me|u\.name|u\.rm|u\.rmAll|captcha|auth\.mail|auth\.mail\.has|auth\.mail\.resetPassword|auth\.mail\.set|auth\.mail\.set\.mail|auth\.mail\.signup)$ {
    if ($request_method = OPTIONS ) {
      add_header "Access-Control-Allow-Credentials" true always;
      add_header "Access-Control-Allow-Origin"  $http_origin always;
      add_header "Access-Control-Allow-Methods" "*" always;
      add_header "Access-Control-Allow-Headers" "content-type" always;
      return 200;
    }
    proxy_set_header Host $host;
    proxy_pass http://host.docker.internal:8880;
  }

  location / {
    add_header "Access-Control-Allow-Credentials" true always;
    add_header "Access-Control-Allow-Origin"  $http_origin always;
    add_header "Access-Control-Allow-Methods" "*" always;
    add_header "Access-Control-Allow-Headers" "content-type" always;
    if ($request_method = OPTIONS ) {
      return 200;
    }
    proxy_set_header Host $host;
    proxy_pass http://host.docker.internal:8879;
    proxy_read_timeout 120s;
    proxy_connect_timeout 10s;
  }
}
# index index.htm index.html;

# server {
#   server_name  localhost;
#   listen  127.0.0.1:9999;
#   set_by_lua $webdir 'return os.getenv("WEBDIR")';
#   root  $webdir/dist;
#   location / {
#     expires -1;
#   }
# }

