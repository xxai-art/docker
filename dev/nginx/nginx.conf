pid /var/run/nginx.pid;
user root root;
worker_processes 6;

events {
  worker_connections  4096;
}

http {
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}
#resolver 127.0.0.1;
proxy_cache_valid 200 304 302 99y;
proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
proxy_cache_valid 404 1m;
proxy_cache_revalidate on;
proxy_cache_lock on;
proxy_cache_key  $uri;
lua_package_path "/usr/local/lib/lua/?.lua;;";

charset   utf-8;

log_format  cache
  '$remote_addr $remote_user $time_iso8601 "$request" '
  '"$status" $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for" '
  '$request_time $bytes_sent $request_length $upstream_cache_status';

log_format  global_main
  '$host $remote_addr $remote_user $time_iso8601 "$request" '
  '"$status" $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for" '
  '$request_time $bytes_sent $request_length';

log_format error
  '$host $remote_addr $remote_user $time_iso8601 "$request" '
  '"$status" $body_bytes_sent $request_time $bytes_sent $request_length '
  '[$upstream_response_time]';

access_log /var/log/nginx/access.log global_main;
error_log /var/log/nginx/error.log error;

brotli on;
brotli_buffers 16 16k;
brotli_comp_level 6;
brotli_min_length 64;
brotli_static on;
brotli_types text/x-script text/css text/xml text/javascript text/json text/markdown image/svg+xml image/x-icon;

gzip  on;
gzip_buffers     4 16k;
gzip_comp_level 9;
gzip_http_version 1.1;
gzip_min_length  64;
gzip_static on;
gzip_types text/x-script text/css text/xml text/javascript text/json text/markdown image/svg+xml image/x-icon;
gzip_vary on;

keepalive_timeout 65;
sendfile        on;
server_tokens off;

# resolver 127.0.0.1;
ssl_session_cache shared:MozSSL:10m;
ssl_session_timeout 1d;
ssl_session_tickets off;

# ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
ssl_early_data on;
ssl_prefer_server_ciphers on;
ssl_protocols TLSv1.2 TLSv1.3;
tcp_nodelay on;
tcp_nopush on;
types_hash_max_size 2048;

include       mime.types;

more_clear_headers Server;

server {
  # listen 443 ssl http2;
  # listen [::]:443 ssl http2;
  # reuseport 是全局设置的
  listen 443 quic reuseport;
  listen [::]:443 quic reuseport;
  ssl_certificate /root/.acme.sh/${host}_ecc/fullchain.cer;
  ssl_certificate_key /root/.acme.sh/${host}_ecc/$host.key;
  # return 301 https://user.tax$request_uri;
}


include /etc/nginx/site/*.conf;

}
